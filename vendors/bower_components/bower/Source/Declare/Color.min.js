declare("atom.Color",{initialize:function(value){var a=arguments,type;if(a.length==4||a.length==3){value=slice.call(a)}else if(value&&value.length==1){value=value[0]}type=typeof value;if(Array.isArray(value)){this.fromArray(value)}else if(type=="number"){this.fromNumber(value)}else if(type=="string"){this.fromString(value)}else if(type=="object"){this.fromObject(value)}else{throw new TypeError("Unknown type in atom.Color: "+typeof value+";\n"+value)}},r:0,g:0,b:0,a:1,length:4,noLimits:false,get red(){return this.r},get green(){return this.g},get blue(){return this.b},get alpha(){return this.a},set red(v){this.setValue("r",v)},set green(v){this.setValue("g",v)},set blue(v){this.setValue("b",v)},set alpha(v){this.setValue("a",v,true)},safeAlphaSet:function(v){if(v!=null){this.alpha=Math.round(v*1e3)/1e3}},setValue:function(prop,value,isFloat){value=Number(value);if(value!=value){throw new TypeError("Value is NaN ("+prop+"): "+value)}if(!isFloat)value=Math.round(value);this[prop]=this.noLimits?value:atom.number.limit(value,0,isFloat?1:255)},fromArray:function(array){if(!array||array.length<3||array.length>4){throw new TypeError("Wrong array in atom.Color: "+array)}this.red=array[0];this.green=array[1];this.blue=array[2];this.safeAlphaSet(array[3]);return this},fromObject:function(object){if(typeof object!="object"){throw new TypeError('Not object in "fromObject": '+typeof object)}function fetch(p1,p2){return object[p1]!=null?object[p1]:object[p2]}this.red=fetch("r","red");this.green=fetch("g","green");this.blue=fetch("b","blue");this.safeAlphaSet(fetch("a","alpha"));return this},fromString:function(string){if(!this.constructor.isColorString(string)){throw new TypeError('Not color string in "fromString": '+string)}var hex,array;string=string.toLowerCase();string=this.constructor.colorNames[string]||string;if(hex=string.match(/^#(\w{1,2})(\w{1,2})(\w{1,2})(\w{1,2})?$/)){array=atom.array.clean(hex.slice(1));array=array.map(function(part){if(part.length==1)part+=part;return parseInt(part,16)});if(array.length==4)array[3]/=255}else{array=string.match(/([\.\d]{1,})/g).map(Number)}return this.fromArray(array)},fromNumber:function(number){if(typeof number!="number"||number<0||number>4294967295){throw new TypeError('Not color number in "fromNumber": '+number.toString(16))}return this.fromArray([number>>24&255,number>>16&255,number>>8&255,(number&255)/255])},toArray:function(){return[this.r,this.g,this.b,this.a]},toString:function(type){var arr=this.toArray();if(type=="hex"||type=="hexA"){return"#"+arr.map(function(color,i){if(i==3){if(type=="hex")return"";color=Math.round(color*255)}var bit=color.toString(16);return bit.length==1?"0"+bit:bit}).join("")}else{return"rgba("+arr+")"}},toNumber:function(){return parseInt(this.toString("hexA").substr(1),16)},toObject:function(abbreviationNames){return abbreviationNames?{r:this.r,g:this.g,b:this.b,a:this.a}:{red:this.r,green:this.g,blue:this.b,alpha:this.a}},diff:function(color){color=atom.Color(color);return new atom.Color.Shift([color.red-this.red,color.green-this.green,color.blue-this.blue,color.alpha-this.alpha])},move:function(color){color=atom.Color.Shift(color);this.red+=color.red;this.green+=color.green;this.blue+=color.blue;this.alpha+=color.alpha;return this},shift:function(color){return this.clone().move(color)},map:function(fn){var color=this;["red","green","blue","alpha"].forEach(function(component){color[component]=fn.call(color,color[component],component,color)});return color},add:function(factor){return this.map(function(value){return value+factor})},mul:function(factor){return this.map(function(value){return value*factor})},equals:function(color){return color&&color instanceof this.constructor&&color.red==this.red&&color.green==this.green&&color.blue==this.blue&&color.alpha==this.alpha},dump:function(){return"[atom.Color("+this.toString("hexA")+")]"},clone:function(){return new this.constructor(this)}}).own({invoke:declare.castArguments,isColorString:function(string){if(typeof string!="string")return false;return Boolean(string in this.colorNames||string.match(/^#\w{3,6}$/)||string.match(/^rgba?\([\d\., ]+\)$/))},colorNames:{white:"#ffffff",silver:"#c0c0c0",gray:"#808080",black:"#000000",red:"#ff0000",maroon:"#800000",yellow:"#ffff00",olive:"#808000",lime:"#00ff00",green:"#008000",aqua:"#00ffff",teal:"#008080",blue:"#0000ff",navy:"#000080",fuchsia:"#ff00ff",purple:"#800080",orange:"#ffa500"},random:function(html){var source,random=atom.number.random;if(html){source=atom.array.random(this.colorNamesList)}else{source=[random(0,255),random(0,255),random(0,255)]}return new this(source)}});atom.Color.colorNamesList=Object.keys(atom.Color.colorNames);declare("atom.Color.Shift",atom.Color,{noLimits:true});