var prototypize={callbacks:[],fn:function(source){return function(methodName){return function(){var args=slice.call(arguments);args.unshift(this);return source[methodName].apply(source,args)}}},proto:function(object,proto,methodsString){coreAppend(object.prototype,atom.array.associate(methodsString.split(" "),proto));return prototypize},own:function(object,source,methodsString){coreAppend(object,atom.object.collect(source,methodsString.split(" ")));return prototypize},add:function(callback){this.callbacks.push(callback)}};atom.patching=function(globalObject){prototypize.callbacks.forEach(function(callback){callback(globalObject)})};